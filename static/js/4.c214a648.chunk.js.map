{"version":3,"file":"static/js/4.c214a648.chunk.js","mappings":"kOA4CA,UAlCuB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7BC,GAAYF,EAAAA,EAAAA,KAAY,SAAAG,GAAK,OAAIA,EAAMC,aAAaC,kBAAkB,IAO5E,OALAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,CAAEC,SAAUX,EAAcY,MAAO,GAChDd,GAASe,EAAAA,EAAAA,IAA4BH,GACvC,GAAG,CAACZ,EAAUE,IAEPK,GACLS,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACLb,EAAec,OAAS,GAC1BF,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAAAC,SACHhB,EACGA,EACGiB,MAAM,EAAG,GACTC,KAAI,SAAAC,GAAA,IAAGC,EAAWD,EAAXC,YAAaC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAGJ,EAAHI,IAAG,OACtCX,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAETC,GAAIF,EACJG,MAAOL,EACPM,QAASP,EACTQ,KAAMN,GAJDC,EAKL,IAEN,QAGNX,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAACD,KAAI,oBAElB,C,sECxCab,E,QAAQe,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gU,qGCAlBC,EAAOH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oPAajBE,EAAgBJ,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oFAO1BI,EAAcN,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,wR,SCnBxBR,EAAa,SAAHL,GAAsC,IAAhCM,EAAEN,EAAFM,GAAIC,EAAKP,EAALO,MAAOE,EAAIT,EAAJS,KAAMD,EAAOR,EAAPQ,QAC5C,OACEf,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaf,GAAKT,UACxByB,EAAAA,EAAAA,MAACR,EAAI,CAAAjB,SAAA,EACHJ,EAAAA,EAAAA,KAACsB,EAAa,CAACQ,IAAKhB,EAAOiB,IAAKhB,KAChCf,EAAAA,EAAAA,KAACwB,EAAW,CAAApB,SAAEY,QAItB,C,0VCVagB,EAAUd,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qFAOpBa,EAAOf,EAAAA,GAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yMAefc,EAAQhB,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0L,SCQ/B,EAzBiB,SAAHb,GAAkB,IAAZS,EAAIT,EAAJS,KAClB,OACEa,EAAAA,EAAAA,MAACG,EAAO,CAAA5B,SAAA,EACNJ,EAAAA,EAAAA,KAACkC,EAAK,CAAA9B,UACJyB,EAAAA,EAAAA,MAAA,WAAAzB,SAAA,EACEJ,EAAAA,EAAAA,KAAA,UACEmC,MAAM,sBACNC,OAAM,GAAAR,OAAKS,EAAc,MAAAT,OAAKU,EAAc,UAE9CtC,EAAAA,EAAAA,KAAA,UACEmC,MAAM,qBACNC,OAAM,GAAAR,OAAKS,EAAc,MAAAT,OAAKU,EAAc,UAE9CtC,EAAAA,EAAAA,KAAA,OACE8B,IAAKS,EACLH,OAAM,GAAAR,OAAKW,EAAU,MAAAX,OAAKY,EAAU,OACpCT,IAAI,gBAIV/B,EAAAA,EAAAA,KAACiC,EAAI,CAAA7B,SAAEY,MAGb,C","sources":["components/CategoriesCard/CategoriesCard.jsx","components/CategoriesCard/CategoriesCard.styled.jsx","components/Main/PreviewCategories/RecipeCard.styled.jsx","components/Main/PreviewCategories/RecipeCard.jsx","components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { RecipeCard } from 'components/Main/PreviewCategories/RecipeCard';\nimport NotFound from 'components/NotFound/NotFound';\nimport { Table } from './CategoriesCard.styled';\nimport { getLimitedRecipes } from 'redux/commonRecipes/commonSelectors';\nimport { getLimitedRecipesByCategory } from 'redux/commonRecipes/commonOperations';\n\nconst CategoriesCard = () => {\n  const dispatch = useDispatch();\n  const { categoryName } = useParams();\n  const limitedRecipes = useSelector(getLimitedRecipes);\n  const isPending = useSelector(state => state.outerRecipes.isCategoryFetching);\n\n  useEffect(() => {\n    const params = { category: categoryName, limit: 8 };\n    dispatch(getLimitedRecipesByCategory(params));\n  }, [dispatch, categoryName]);\n\n  return isPending ? (\n    <Loader />\n  ) : limitedRecipes.length > 0 ? (\n    <Table>\n      {limitedRecipes\n        ? limitedRecipes\n            .slice(0, 8)\n            .map(({ description, preview, title, _id }) => (\n              <RecipeCard\n                key={_id}\n                id={_id}\n                image={preview}\n                altText={description}\n                text={title}\n              />\n            ))\n        : null}\n    </Table>\n  ) : (\n    <NotFound text={`No results found`} />\n  );\n};\n\nexport default CategoriesCard;\n","import styled from 'styled-components';\n\nexport const Table = styled.div`\n  display: grid;\n  gap: 32px;\n  margin-top: 50px;\n\n  grid-template-columns: 1fr;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    margin-top: 50px;\n  }\n\n  @media (min-width: 1440px) {\n    grid-template-columns: repeat(4, 1fr);\n    gap: 14px;\n    row-gap: 100px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  border-radius: 8px;\n  width: 100%;\n  height: 323px;\n  position: relative;\n  overflow: hidden;\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 300px;\n  }\n`;\nexport const RecipePicture = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const RecipeTitle = styled.div`\n  background: #ffffff;\n  border-radius: 8px;\n  padding: 16px;\n  color: #3e4462;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n\n  position: absolute;\n  bottom: 26px;\n  left: 18px;\n  right: 18px;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, RecipePicture, RecipeTitle } from './RecipeCard.styled';\nexport const RecipeCard = ({ id, image, text, altText }) => {\n  return (\n    <Link to={`/recipe/${id}`}>\n      <Card>\n        <RecipePicture src={image} alt={altText} />\n        <RecipeTitle>{text}</RecipeTitle>\n      </Card>\n    </Link>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  text-align: center;\n  width: 100%;\n  height: auto;\n`;\n\nexport const Text = styled.p`\n  padding: 0;\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1;\n\n  opacity: 0.5;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 0;\n    font-size: 24px;\n  }\n`;\n\nexport const Image = styled.div`\n  margin: 50px auto 24px;\n  width: 208px;\n  height: 133px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n    width: 350px;\n    height: 225px;\n  }\n`;\n","import basketMob1 from 'images/NotFound/basket_mobile@1x.png';\nimport basketMob2 from 'images/NotFound/basket_mobile@2x.png';\nimport basketTabDesc1 from 'images/NotFound/basket_desc_to_tab@1x.png';\nimport basketTabDesc2 from 'images/NotFound/basket_desc_to_tab@2x.png';\n\nimport { Wrapper, Text, Image } from 'components/NotFound/NotFound.styled';\n\nconst NotFound = ({ text }) => {\n  return (\n    <Wrapper>\n      <Image>\n        <picture>\n          <source\n            media=\"(min-width: 1440px)\"\n            srcSet={`${basketTabDesc1}, ${basketTabDesc2} 2x`}\n          />\n          <source\n            media=\"(min-width: 768px)\"\n            srcSet={`${basketTabDesc1}, ${basketTabDesc2} 2x`}\n          />\n          <img\n            src={basketMob1}\n            srcSet={`${basketMob1}, ${basketMob2} 2x`}\n            alt=\"Error\"\n          />\n        </picture>\n      </Image>\n      <Text>{text}</Text>\n    </Wrapper>\n  );\n};\n\nexport default NotFound;\n"],"names":["dispatch","useDispatch","categoryName","useParams","limitedRecipes","useSelector","getLimitedRecipes","isPending","state","outerRecipes","isCategoryFetching","useEffect","params","category","limit","getLimitedRecipesByCategory","_jsx","Loader","length","Table","children","slice","map","_ref","description","preview","title","_id","RecipeCard","id","image","altText","text","NotFound","styled","_templateObject","_taggedTemplateLiteral","Card","RecipePicture","_templateObject2","RecipeTitle","_templateObject3","Link","to","concat","_jsxs","src","alt","Wrapper","Text","Image","media","srcSet","basketTabDesc1","basketTabDesc2","basketMob1","basketMob2"],"sourceRoot":""}